version: '2'

services:
    pgmaster:
        restart: on-failure
        build:
            context: .
            dockerfile: Postgres-latest.Dockerfile
        environment:
            PARTNER_NODES: "pgmaster.host --port 5532,pgslave1.host --port 5533,pgslave3.host --port 5535"
            NODE_ID: 1 # Integer number of node
            NODE_NAME: node1 # Node name
            CLUSTER_NODE_NETWORK_NAME: pgmaster.host # (default: hostname of the node)
            NODE_PRIORITY: 100  # (default: 100)
            SSH_ENABLE: 1
            # database we want to use for application
            POSTGRES_PASSWORD: dino.dev
            POSTGRES_USER: postgres
            POSTGRES_DB: wmc_loyalty
            CLEAN_OVER_REWIND: 0
            CONFIGS: "listen_addresses:'*',max_replication_slots:5"
                                  # in format variable1:value1[,variable2:value2[,...]]
                                  # used for pgpool.conf file
            # defaults:
            CLUSTER_NAME: pg_cluster # default is pg_cluster
            REPLICATION_DB: replication_db # default is replication_db
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            NODE_PORT: 5532
            port_pgmaster.host: 5532
            port_pgslave1.host: 5533
            port_pgslave2.host: 5534
            port_pgslave3.host: 5535
            port_pgslave4.host: 5536
        volumes:
            - pgmaster:/var/lib/postgresql/data
        extra_hosts:
            - "pgmaster.host:192.168.12.32"
            - "pgslave1.host:192.168.12.31"
            - "pgslave2.host:192.168.12.32"
            - "pgslave3.host:192.168.12.30"
            - "pgslave4.host:192.168.12.32"
        expose:
            - 5532
        network_mode: host
    pgslave2:
        restart: on-failure
        build:
            context: .
            dockerfile: Postgres-latest.Dockerfile
        environment:
            REPLICATION_PRIMARY_HOST: pgslave1.host # I want to have cascade Streeming replication
            REPLICATION_PRIMARY_PORT: 5533
            NODE_ID: 3
            NODE_NAME: node3
            CLUSTER_NODE_NETWORK_NAME: pgslave2.host # (default: hostname of the node)
            #USE_REPLICATION_SLOTS: 0
            NODE_PORT: 5534
            port_pgmaster.host: 5532
            port_pgslave1.host: 5533
            port_pgslave2.host: 5534
            port_pgslave3.host: 5535
            port_pgslave4.host: 5536
        volumes:
            - pgslave2:/var/lib/postgresql/data
        extra_hosts:
            - "pgmaster.host:192.168.12.32"
            - "pgslave1.host:192.168.12.31"
            - "pgslave2.host:192.168.12.32"
            - "pgslave3.host:192.168.12.30"
            - "pgslave4.host:192.168.12.32"
        expose:
            - 5534
        network_mode: host
    pgslave4:
        restart: on-failure
        build:
            context: .
            dockerfile: Postgres-latest.Dockerfile
        environment:
            REPLICATION_PRIMARY_HOST: pgslave3.host
            REPLICATION_PRIMARY_PORT: 5535
            NODE_ID: 5
            NODE_NAME: node5
            CLUSTER_NODE_NETWORK_NAME: pgslave4.host # (default: hostname of the node)
            #USE_REPLICATION_SLOTS: 0
            NODE_PORT: 5535
            port_pgmaster.host: 5532
            port_pgslave1.host: 5533
            port_pgslave2.host: 5534
            port_pgslave3.host: 5535
            port_pgslave4.host: 5536
        volumes:
            - pgslave4:/var/lib/postgresql/data
        extra_hosts:
            - "pgmaster.host:192.168.12.32"
            - "pgslave1.host:192.168.12.31"
            - "pgslave2.host:192.168.12.32"
            - "pgslave3.host:192.168.12.30"
            - "pgslave4.host:192.168.12.32"
        expose:
            - 5536
        network_mode: host

volumes:
    pgmaster:
    pgslave2:
    pgslave4:
